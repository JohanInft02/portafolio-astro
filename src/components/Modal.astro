---
interface Props {
	id: string;
	title: string;
}

const { id, title } = Astro.props;
---

<div id={id} class="modal hidden fixed inset-0 bg-gray-600 bg-opacity-50 overflow-y-auto h-full w-full">
	<div class="relative top-20 mx-auto p-5 border w-11/12 md:w-3/4 lg:w-1/2 shadow-lg rounded-md bg-white dark:bg-gray-800">
		<div class="mt-3">
			<h3 class="text-lg leading-6 font-medium text-gray-900 dark:text-white">{title}</h3>
			<div class="mt-2 px-7 py-3">
				<slot />
			</div>
			<div class="items-center px-4 py-3">
				<button id="close-modal" class="px-4 py-2 bg-gray-500 text-white text-base font-medium rounded-md w-full shadow-sm hover:bg-gray-600 focus:outline-none focus:ring-2 focus:ring-gray-300">
					Close
				</button>
			</div>
		</div>
	</div>
</div>

<script>
	function closeModal(modalId) {
		document.getElementById(modalId).classList.add('hidden');
	}

	document.querySelectorAll('[id^="close-modal"]').forEach(button => {
		button.addEventListener('click', () => {
			const modal = button.closest('.modal');
			if (modal) {
				closeModal(modal.id);
			}
		});
	});

	window.addEventListener('click', (event) => {
		if (event.target.classList.contains('modal')) {
			closeModal(event.target.id);
		}
	});
</script>