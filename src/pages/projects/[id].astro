---
import Layout from '../../layouts/Layout.astro';
import { Icon } from 'astro-icon/components';
import { Image } from 'astro:assets';
import ecommerceImage from '../../assets/default-image.jpg';
import taskManagementImage from '../../assets/default-image.jpg';
import weatherAppImage from '../../assets/default-image.jpg';

export function getStaticPaths() {
	return [
		{ params: { id: '1' } },
		{ params: { id: '2' } },
		{ params: { id: '3' } },
		{ params: { id: '4' } },
		{ params: { id: '5' } },
		{ params: { id: '6' } },
	];
}

const { id } = Astro.params;

// In a real application, you would fetch this data from an API or database
const projectDetails = {
	1: {
		title: 'E-commerce Platform',
		description: 'A full-featured e-commerce platform built with React and Node.js.',
		image: ecommerceImage,
		technologies: ['React', 'Node.js', 'MongoDB', 'Express', 'Redux'],
		participants: ['John Doe', 'Jane Smith'],
		github: 'https://github.com/yourusername/ecommerce-platform',
		live: 'https://ecommerce-platform-demo.com',
	},
	2: {
		title: 'Task Management App',
		description: 'A collaborative task management application using Vue.js and Firebase.',
		image: taskManagementImage,
		technologies: ['Vue.js', 'Firebase', 'Vuex', 'Tailwind CSS'],
		participants: ['Alice Johnson', 'Bob Williams'],
		github: 'https://github.com/yourusername/task-management-app',
		live: 'https://task-management-demo.com',
	},
	3: {
		title: 'Weather Forecast App',
		description: 'A weather forecast application using React Native and OpenWeatherMap API.',
		image: weatherAppImage,
		technologies: ['React Native', 'Expo', 'OpenWeatherMap API'],
		participants: ['Charlie Brown', 'Diana Martinez'],
		github: 'https://github.com/yourusername/weather-forecast-app',
		live: 'https://weather-forecast-demo.com',
	},
};

const project = projectDetails[id];
---

<Layout title={`${project.title} - Project Details`}>
	<div class="max-w-4xl mx-auto">
		<h1 class="text-3xl font-bold mb-4">{project.title}</h1>
		<Image src={project.image} alt={project.title} class="w-full h-64 object-cover rounded-lg shadow-md mb-6" />
		<p class="text-gray-700 dark:text-gray-300 mb-6">{project.description}</p>
		
		<h2 class="text-2xl font-semibold mb-2">Technologies Used</h2>
		<ul class="flex flex-wrap gap-2 mb-6">
			{project.technologies.map((tech) => (
				<li class="bg-gray-200 dark:bg-gray-700 px-3 py-1 rounded-full text-sm">{tech}</li>
			))}
		</ul>
		
		<h2 class="text-2xl font-semibold mb-2">Participants</h2>
		<ul class="list-disc list-inside mb-6">
			{project.participants.map((participant) => (
				<li>{participant}</li>
			))}
		</ul>
		
		<div class="flex space-x-4 mb-6">
			<a href={project.github} target="_blank" rel="noopener noreferrer" class="flex items-center bg-gray-800 hover:bg-gray-700 text-white font-bold py-2 px-4 rounded">
				<Icon name="mdi:github" class="w-5 h-5 mr-2" />
				View on GitHub
			</a>
			<a href={project.live} target="_blank" rel="noopener noreferrer" class="flex items-center bg-blue-500 hover:bg-blue-600 text-white font-bold py-2 px-4 rounded">
				<Icon name="mdi:web" class="w-5 h-5 mr-2" />
				View Live Project
			</a>
		</div>
		
		<a href="/#projects" class="text-blue-500 hover:underline">&larr; Back to Projects</a>
	</div>
</Layout>

