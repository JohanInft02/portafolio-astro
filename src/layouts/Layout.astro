---
import { ClientRouter } from 'astro:transitions';
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';
import Loading from '../components/Loading';
import '../styles/global.css';
import i18next, { getCurrentLanguage } from '../i18n/i18n';

interface Props {
  title: string;
}

const { title } = Astro.props;
const currentLanguage = getCurrentLanguage();
---

<!doctype html>
<html lang={currentLanguage}>
  <head>
    <meta charset="UTF-8" />
    <meta name="description" content="Bento-style Portfolio" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    <title>{title}</title>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap" rel="stylesheet">
    <ClientRouter />
  </head>
  <body class="min-h-screen bg-gray-50 dark:bg-gray-900 font-sans antialiased">
    <Loading client:only="react" />
    <div id="main-content" class="hidden opacity-0 scale-95 pb-16 md:pb-0">
      <Header />
      <main class="container mx-auto px-4 py-8">
        <slot />
      </main>
      <Footer />
    </div>
  </body>
</html>

<script>
  import i18next from '../i18n/i18n';
  
  async function initializeApp() {
    const mainContent = document.getElementById('main-content');

    try {
      // Ensure i18next is initialized
      await i18next.init();

      // Show main content
      if (mainContent) {
        mainContent.classList.remove('hidden');
        setTimeout(() => {
          mainContent.classList.add('fade-zoom-in');
        }, 50);
      }
    } catch (error) {
      console.error('Failed to initialize app:', error);
    }
  }

  // Initialize the app when the loading is complete
  document.addEventListener('astro:load', () => {
    const loadingComponent = document.querySelector('astro-island[component-url$="Loading.tsx"]');
    if (loadingComponent) {
      loadingComponent.addEventListener('loadingComplete', initializeApp);
    }
  });

  // Fallback initialization in case the loading component doesn't trigger
  document.addEventListener('DOMContentLoaded', () => {
    setTimeout(initializeApp, 3000);
  });
</script>

<style>
  .fade-zoom-in {
    animation: fadeZoomIn 0.5s ease-out forwards;
  }

  @keyframes fadeZoomIn {
    from {
      opacity: 0;
      transform: scale(0.95);
    }
    to {
      opacity: 1;
      transform: scale(1);
    }
  }
</style>

